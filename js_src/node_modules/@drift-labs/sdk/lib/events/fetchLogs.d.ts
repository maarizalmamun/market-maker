import { Program } from '@coral-xyz/anchor';
import { Connection, Finality, PublicKey, TransactionResponse, TransactionSignature } from '@solana/web3.js';
import { WrappedEvents } from '@drift-labs/sdk/lib/events/types';
type Log = {
    txSig: TransactionSignature;
    slot: number;
    logs: string[];
};
type FetchLogsResponse = {
    earliestTx: string;
    mostRecentTx: string;
    earliestSlot: number;
    mostRecentSlot: number;
    transactionLogs: Log[];
    mostRecentBlockTime: number | undefined;
};
export declare function fetchLogs(connection: Connection, programId: PublicKey, finality: Finality, beforeTx?: TransactionSignature, untilTx?: TransactionSignature, limit?: number): Promise<FetchLogsResponse>;
export declare class LogParser {
    private program;
    constructor(program: Program);
    parseEventsFromTransaction(transaction: TransactionResponse): WrappedEvents;
    parseEventsFromLogs(event: Log): WrappedEvents;
}
export {};
