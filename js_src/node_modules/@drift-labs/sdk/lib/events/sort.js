"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSortFn = void 0;
const index_1 = require("../index");
function clientSortAscFn() {
    return 'less than';
}
function clientSortDescFn() {
    return 'greater than';
}
function defaultBlockchainSortFn(currentEvent, newEvent) {
    return currentEvent.slot <= newEvent.slot ? 'less than' : 'greater than';
}
function orderActionRecordSortFn(currentEvent, newEvent) {
    var _a, _b;
    const currentEventMarketIndex = currentEvent.marketIndex;
    const newEventMarketIndex = newEvent.marketIndex;
    if (currentEventMarketIndex !== newEventMarketIndex) {
        return currentEvent.ts.lte(newEvent.ts) ? 'less than' : 'greater than';
    }
    if (((_a = currentEvent.fillRecordId) === null || _a === void 0 ? void 0 : _a.gt(index_1.ZERO)) && ((_b = newEvent.fillRecordId) === null || _b === void 0 ? void 0 : _b.gt(index_1.ZERO))) {
        return currentEvent.fillRecordId.lte(newEvent.fillRecordId)
            ? 'less than'
            : 'greater than';
    }
    else {
        return currentEvent.ts.lte(newEvent.ts) ? 'less than' : 'greater than';
    }
}
function getSortFn(orderBy, orderDir, eventType) {
    if (orderBy === 'client') {
        return orderDir === 'asc' ? clientSortAscFn : clientSortDescFn;
    }
    switch (eventType) {
        case 'OrderActionRecord':
            return orderActionRecordSortFn;
        default:
            return defaultBlockchainSortFn;
    }
}
exports.getSortFn = getSortFn;
