"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMarketsAndOraclesForSubscription = exports.initialize = exports.getConfig = exports.configs = void 0;
const perpMarkets_1 = require("./constants/perpMarkets");
const spotMarkets_1 = require("./constants/spotMarkets");
exports.configs = {
    devnet: {
        ENV: 'devnet',
        PYTH_ORACLE_MAPPING_ADDRESS: 'BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2',
        DRIFT_PROGRAM_ID: 'dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH',
        USDC_MINT_ADDRESS: '8zGuJQqwhZafTah7Uc7Z4tXRnguqkn5KLFAP8oV6PHe2',
        SERUM_V3: 'DESVgJVGajEgKGXhb6XmqDHGz3VjdgP7rEVESBgxmroY',
        PHOENIX: 'PhoeNiXZ8ByJGLkxNfZRnkUfjvmuYqLR89jjFHGqdXY',
        V2_ALPHA_TICKET_MINT_ADDRESS: 'DeEiGWfCMP9psnLGkxGrBBMEAW5Jv8bBGMN8DCtFRCyB',
        PERP_MARKETS: perpMarkets_1.DevnetPerpMarkets,
        SPOT_MARKETS: spotMarkets_1.DevnetSpotMarkets,
        MARKET_LOOKUP_TABLE: 'FaMS3U4uBojvGn5FSDEPimddcXsCfwkKsFgMVVnDdxGb',
    },
    'mainnet-beta': {
        ENV: 'mainnet-beta',
        PYTH_ORACLE_MAPPING_ADDRESS: 'AHtgzX45WTKfkPG53L6WYhGEXwQkN1BVknET3sVsLL8J',
        DRIFT_PROGRAM_ID: 'dRiftyHA39MWEi3m9aunc5MzRF1JYuBsbn6VPcn33UH',
        USDC_MINT_ADDRESS: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',
        SERUM_V3: 'srmqPvymJeFKQ4zGQed1GFppgkRHL9kaELCbyksJtPX',
        PHOENIX: 'PhoeNiXZ8ByJGLkxNfZRnkUfjvmuYqLR89jjFHGqdXY',
        V2_ALPHA_TICKET_MINT_ADDRESS: 'Cmvhycb6LQvvzaShGw4iDHRLzeSSryioAsU98DSSkMNa',
        PERP_MARKETS: perpMarkets_1.MainnetPerpMarkets,
        SPOT_MARKETS: spotMarkets_1.MainnetSpotMarkets,
        MARKET_LOOKUP_TABLE: 'D9cnvzswDikQDf53k4HpQ3KJ9y1Fv3HGGDFYMXnK5T6c',
    },
};
let currentConfig = exports.configs.devnet;
const getConfig = () => currentConfig;
exports.getConfig = getConfig;
/**
 * Allows customization of the SDK's environment and endpoints. You can pass individual settings to override the settings with your own presets.
 *
 * Defaults to master environment if you don't use this function.
 * @param props
 * @returns
 */
const initialize = (props) => {
    var _a, _b;
    //@ts-ignore
    if (props.env === 'master')
        return { ...exports.configs['devnet'], ...((_a = props.overrideEnv) !== null && _a !== void 0 ? _a : {}) };
    currentConfig = { ...exports.configs[props.env], ...((_b = props.overrideEnv) !== null && _b !== void 0 ? _b : {}) };
    return currentConfig;
};
exports.initialize = initialize;
function getMarketsAndOraclesForSubscription(env) {
    const perpMarketIndexes = [];
    const spotMarketIndexes = [];
    const oracleInfos = new Map();
    for (const market of perpMarkets_1.PerpMarkets[env]) {
        perpMarketIndexes.push(market.marketIndex);
        oracleInfos.set(market.oracle.toString(), {
            publicKey: market.oracle,
            source: market.oracleSource,
        });
    }
    for (const spotMarket of spotMarkets_1.SpotMarkets[env]) {
        spotMarketIndexes.push(spotMarket.marketIndex);
        oracleInfos.set(spotMarket.oracle.toString(), {
            publicKey: spotMarket.oracle,
            source: spotMarket.oracleSource,
        });
    }
    return {
        perpMarketIndexes: perpMarketIndexes,
        spotMarketIndexes: spotMarketIndexes,
        oracleInfos: Array.from(oracleInfos.values()),
    };
}
exports.getMarketsAndOraclesForSubscription = getMarketsAndOraclesForSubscription;
