/// <reference types="node" />
import { DataAndSlot, BufferAndSlot, AccountSubscriber } from './types';
import { Program } from '@coral-xyz/anchor';
import { AccountInfo, Context, PublicKey } from '@solana/web3.js';
export declare class WebSocketAccountSubscriber<T> implements AccountSubscriber<T> {
    dataAndSlot?: DataAndSlot<T>;
    bufferAndSlot?: BufferAndSlot;
    accountName: string;
    program: Program;
    accountPublicKey: PublicKey;
    decodeBufferFn: (buffer: Buffer) => T;
    onChange: (data: T) => void;
    listenerId?: number;
    constructor(accountName: string, program: Program, accountPublicKey: PublicKey, decodeBuffer?: (buffer: Buffer) => T);
    subscribe(onChange: (data: T) => void): Promise<void>;
    setData(data: T, slot?: number): void;
    fetch(): Promise<void>;
    handleRpcResponse(context: Context, accountInfo?: AccountInfo<Buffer>): void;
    decodeBuffer(buffer: Buffer): T;
    unsubscribe(): Promise<void>;
}
