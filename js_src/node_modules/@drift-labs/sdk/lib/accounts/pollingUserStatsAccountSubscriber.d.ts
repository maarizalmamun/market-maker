/// <reference types="node" />
import { DataAndSlot, UserStatsAccountSubscriber, UserStatsAccountEvents } from '@drift-labs/sdk/lib/accounts/types';
import { Program } from '@coral-xyz/anchor';
import StrictEventEmitter from 'strict-event-emitter-types';
import { EventEmitter } from 'events';
import { PublicKey } from '@solana/web3.js';
import { UserStatsAccount } from '@drift-labs/sdk/lib/types';
import { BulkAccountLoader } from '@drift-labs/sdk/lib/accounts/bulkAccountLoader';
export declare class PollingUserStatsAccountSubscriber implements UserStatsAccountSubscriber {
    isSubscribed: boolean;
    program: Program;
    eventEmitter: StrictEventEmitter<EventEmitter, UserStatsAccountEvents>;
    userStatsAccountPublicKey: PublicKey;
    accountLoader: BulkAccountLoader;
    callbackId?: string;
    errorCallbackId?: string;
    userStats?: DataAndSlot<UserStatsAccount>;
    constructor(program: Program, userStatsAccountPublicKey: PublicKey, accountLoader: BulkAccountLoader);
    subscribe(userStatsAccount?: UserStatsAccount): Promise<boolean>;
    addToAccountLoader(): Promise<void>;
    fetchIfUnloaded(): Promise<void>;
    fetch(): Promise<void>;
    doesAccountExist(): boolean;
    unsubscribe(): Promise<void>;
    assertIsSubscribed(): void;
    getUserStatsAccountAndSlot(): DataAndSlot<UserStatsAccount>;
}
