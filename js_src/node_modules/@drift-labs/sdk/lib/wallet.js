"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadKeypair = exports.Wallet = void 0;
const web3_js_1 = require("@solana/web3.js");
const fs_1 = __importDefault(require("fs"));
const bs58_1 = __importDefault(require("bs58"));
class Wallet {
    constructor(payer) {
        this.payer = payer;
    }
    async signTransaction(tx) {
        tx.partialSign(this.payer);
        return tx;
    }
    async signAllTransactions(txs) {
        return txs.map((t) => {
            t.partialSign(this.payer);
            return t;
        });
    }
    get publicKey() {
        return this.payer.publicKey;
    }
}
exports.Wallet = Wallet;
function loadKeypair(privateKey) {
    // try to load privateKey as a filepath
    let loadedKey;
    if (fs_1.default.existsSync(privateKey)) {
        loadedKey = new Uint8Array(JSON.parse(fs_1.default.readFileSync(privateKey).toString()));
    }
    else {
        if (privateKey.includes(',')) {
            loadedKey = Uint8Array.from(privateKey.split(',').map((val) => Number(val)));
        }
        else {
            loadedKey = new Uint8Array(bs58_1.default.decode(privateKey));
        }
    }
    return web3_js_1.Keypair.fromSecretKey(Uint8Array.from(loadedKey));
}
exports.loadKeypair = loadKeypair;
