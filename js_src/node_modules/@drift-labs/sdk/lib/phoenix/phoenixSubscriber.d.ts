import { Connection, PublicKey } from '@solana/web3.js';
import { BulkAccountLoader } from '@drift-labs/sdk/lib/accounts/bulkAccountLoader';
import { MarketData, Client } from '@ellipsis-labs/phoenix-sdk';
import { BN } from '@coral-xyz/anchor';
import { L2Level, L2OrderBookGenerator } from '@drift-labs/sdk/lib/dlob/orderBookLevels';
export type PhoenixMarketSubscriberConfig = {
    connection: Connection;
    programId: PublicKey;
    marketAddress: PublicKey;
    accountSubscription: {
        type: 'polling';
        accountLoader: BulkAccountLoader;
    } | {
        type: 'websocket';
    };
};
export declare class PhoenixSubscriber implements L2OrderBookGenerator {
    connection: Connection;
    client: Client;
    programId: PublicKey;
    marketAddress: PublicKey;
    subscriptionType: 'polling' | 'websocket';
    accountLoader: BulkAccountLoader | undefined;
    market: MarketData;
    marketCallbackId: string | number;
    clockCallbackId: string | number;
    subscribed: boolean;
    lastSlot: number;
    lastUnixTimestamp: number;
    constructor(config: PhoenixMarketSubscriberConfig);
    subscribe(): Promise<void>;
    getBestBid(): BN | undefined;
    getBestAsk(): BN | undefined;
    getL2Bids(): Generator<L2Level>;
    getL2Asks(): Generator<L2Level>;
    getL2Levels(side: 'bids' | 'asks'): Generator<L2Level>;
    unsubscribe(): Promise<void>;
}
