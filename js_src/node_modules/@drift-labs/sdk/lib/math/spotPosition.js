"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getWorstCaseTokenAmounts = exports.isSpotPositionAvailable = void 0;
const numericConstants_1 = require("../constants/numericConstants");
const spotBalance_1 = require("./spotBalance");
function isSpotPositionAvailable(position) {
    return position.scaledBalance.eq(numericConstants_1.ZERO) && position.openOrders === 0;
}
exports.isSpotPositionAvailable = isSpotPositionAvailable;
function getWorstCaseTokenAmounts(spotPosition, spotMarketAccount, oraclePriceData) {
    const tokenAmount = (0, spotBalance_1.getSignedTokenAmount)((0, spotBalance_1.getTokenAmount)(spotPosition.scaledBalance, spotMarketAccount, spotPosition.balanceType), spotPosition.balanceType);
    const tokenAmountAllBidsFill = tokenAmount.add(spotPosition.openBids);
    const tokenAmountAllAsksFill = tokenAmount.add(spotPosition.openAsks);
    if (tokenAmountAllBidsFill.abs().gt(tokenAmountAllAsksFill.abs())) {
        const worstCaseQuoteTokenAmount = (0, spotBalance_1.getTokenValue)(spotPosition.openBids.neg(), spotMarketAccount.decimals, oraclePriceData);
        return [tokenAmountAllBidsFill, worstCaseQuoteTokenAmount];
    }
    else {
        const worstCaseQuoteTokenAmount = (0, spotBalance_1.getTokenValue)(spotPosition.openAsks.neg(), spotMarketAccount.decimals, oraclePriceData);
        return [tokenAmountAllAsksFill, worstCaseQuoteTokenAmount];
    }
}
exports.getWorstCaseTokenAmounts = getWorstCaseTokenAmounts;
