import { BN, SpotMarketAccount } from '@drift-labs/sdk';
import { OraclePriceData } from '@drift-labs/sdk/lib/oracles/types';
import { PerpMarketAccount, PositionDirection, PerpPosition } from '@drift-labs/sdk/lib/types';
/**
 * calculateBaseAssetValue
 * = market value of closing entire position
 * @param market
 * @param userPosition
 * @param oraclePriceData
 * @returns Base Asset Value. : Precision QUOTE_PRECISION
 */
export declare function calculateBaseAssetValue(market: PerpMarketAccount, userPosition: PerpPosition, oraclePriceData: OraclePriceData, useSpread?: boolean, skipUpdate?: boolean): BN;
/**
 * calculatePositionPNL
 * = BaseAssetAmount * (Avg Exit Price - Avg Entry Price)
 * @param market
 * @param PerpPosition
 * @param withFunding (adds unrealized funding payment pnl to result)
 * @param oraclePriceData
 * @returns BaseAssetAmount : Precision QUOTE_PRECISION
 */
export declare function calculatePositionPNL(market: PerpMarketAccount, perpPosition: PerpPosition, withFunding: boolean, oraclePriceData: OraclePriceData): BN;
export declare function calculateClaimablePnl(market: PerpMarketAccount, spotMarket: SpotMarketAccount, perpPosition: PerpPosition, oraclePriceData: OraclePriceData): BN;
/**
 *
 * @param market
 * @param PerpPosition
 * @returns // TODO-PRECISION
 */
export declare function calculatePositionFundingPNL(market: PerpMarketAccount, perpPosition: PerpPosition): BN;
export declare function positionIsAvailable(position: PerpPosition): boolean;
/**
 *
 * @param userPosition
 * @returns Precision: PRICE_PRECISION (10^6)
 */
export declare function calculateBreakEvenPrice(userPosition: PerpPosition): BN;
/**
 *
 * @param userPosition
 * @returns Precision: PRICE_PRECISION (10^6)
 */
export declare function calculateEntryPrice(userPosition: PerpPosition): BN;
/**
 *
 * @param userPosition
 * @returns Precision: PRICE_PRECISION (10^10)
 */
export declare function calculateCostBasis(userPosition: PerpPosition): BN;
export declare function findDirectionToClose(userPosition: PerpPosition): PositionDirection;
export declare function positionCurrentDirection(userPosition: PerpPosition): PositionDirection;
export declare function isEmptyPosition(userPosition: PerpPosition): boolean;
export declare function hasOpenOrders(position: PerpPosition): boolean;
