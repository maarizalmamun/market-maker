"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.divCeil = exports.squareRootBN = exports.clampBN = void 0;
const __1 = require("../");
function clampBN(x, min, max) {
    return __1.BN.max(min, __1.BN.min(x, max));
}
exports.clampBN = clampBN;
const squareRootBN = (n) => {
    if (n.lt(new __1.BN(0))) {
        throw new Error('Sqrt only works on non-negtiave inputs');
    }
    if (n.lt(new __1.BN(2))) {
        return n;
    }
    const smallCand = (0, exports.squareRootBN)(n.shrn(2)).shln(1);
    const largeCand = smallCand.add(new __1.BN(1));
    if (largeCand.mul(largeCand).gt(n)) {
        return smallCand;
    }
    else {
        return largeCand;
    }
};
exports.squareRootBN = squareRootBN;
const divCeil = (a, b) => {
    const quotient = a.div(b);
    const remainder = a.mod(b);
    if (remainder.gt(__1.ZERO)) {
        return quotient.add(__1.ONE);
    }
    else {
        return quotient;
    }
};
exports.divCeil = divCeil;
