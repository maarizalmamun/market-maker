import { DriftClient, OrderRecord, UserStatsAccount, UserStats, UserStatsSubscriptionConfig, WrappedEvent } from '@drift-labs/sdk';
import { PublicKey } from '@solana/web3.js';
import { UserMap } from '@drift-labs/sdk/lib/userMap/userMap';
export declare class UserStatsMap {
    /**
     * map from authority pubkey to UserStats
     */
    private userStatsMap;
    private driftClient;
    private accountSubscription;
    private lastNumberOfAuthorities;
    private syncCallback;
    constructor(driftClient: DriftClient, accountSubscription: UserStatsSubscriptionConfig);
    subscribe(): Promise<void>;
    addUserStat(authority: PublicKey, userStatsAccount?: UserStatsAccount): Promise<void>;
    updateWithOrderRecord(record: OrderRecord, userMap: UserMap): Promise<void>;
    updateWithEventRecord(record: WrappedEvent<any>, userMap?: UserMap): Promise<void>;
    has(authorityPublicKey: string): boolean;
    get(authorityPublicKey: string): UserStats;
    mustGet(authorityPublicKey: string): Promise<UserStats>;
    values(): IterableIterator<UserStats>;
    size(): number;
    sync(): Promise<void>;
    unsubscribe(): Promise<void>;
}
