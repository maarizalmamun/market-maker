import { BN, MarketTypeStr, Order } from '@drift-labs/sdk';
import { PublicKey } from '@solana/web3.js';
import { DLOBNode, DLOBNodeMap } from '@drift-labs/sdk/lib/dlob/DLOBNode';
export type SortDirection = 'asc' | 'desc';
export declare function getOrderSignature(orderId: number, userAccount: PublicKey): string;
export interface DLOBNodeGenerator {
    getGenerator(): Generator<DLOBNode>;
}
export declare class NodeList<NodeType extends keyof DLOBNodeMap> implements DLOBNodeGenerator {
    private nodeType;
    private sortDirection;
    head?: DLOBNodeMap[NodeType];
    length: number;
    nodeMap: Map<string, DLOBNodeMap[NodeType]>;
    constructor(nodeType: NodeType, sortDirection: SortDirection);
    clear(): void;
    insert(order: Order, marketType: MarketTypeStr, userAccount: PublicKey): void;
    prependNode(currentNode: DLOBNodeMap[NodeType], newNode: DLOBNodeMap[NodeType]): boolean;
    update(order: Order, userAccount: PublicKey): void;
    remove(order: Order, userAccount: PublicKey): void;
    getGenerator(): Generator<DLOBNode>;
    has(order: Order, userAccount: PublicKey): boolean;
    get(orderSignature: string): DLOBNodeMap[NodeType] | undefined;
    print(): void;
    printTop(): void;
}
export declare function getVammNodeGenerator(price: BN | undefined): Generator<DLOBNode>;
